{"version":3,"file":"fetch-future.es.js","sources":["../src/index.js"],"sourcesContent":["export const fetchF = Future => function (input, options = {}) {\n  return new Future((reject, resolve) => {\n    'use strict'\n    const request = new XMLHttpRequest()\n    const url = input\n    request.open(options.method || 'get', url)\n\n    for (let i in options.headers) {\n      request.setRequestHeader(i, options.headers[i])\n    }\n\n    request.withCredentials = options.credentials === 'include'\n    request.onload = () => resolve(response())\n    request.onerror = reject\n    request.send(options.body)\n\n    const cancel = () => request.abort()\n\n    function response () {\n      let keys = []\n      let all = []\n      let headers = {}\n      let header\n      request.getAllResponseHeaders()\n        .split('\\u000d\\u000a')\n        .filter(Boolean)\n        .reduce((acc, curr) => {\n          const headerPair = curr\n          // Can't use split() here because it does the wrong thing\n          // if the header value has the string \": \" in it.\n          const index = headerPair.indexOf('\\u003a\\u0020')\n          if (index > 0) {\n            let key = headerPair.substring(0, index)\n            const value = headerPair.substring(index + 2)\n\n            keys.push(key = key.toLowerCase())\n            all.push([key, value])\n            header = headers[key]\n            headers[key] = header ? `${header},${value}` : value\n          }\n        }, headers)\n      return {\n        ok: Future.of((request.status / 200 | 0) === 1),\n        abort: cancel,\n        // 200-399\n        status: Future.of(request.status),\n        statusText: Future.of(request.statusText),\n        url: Future.of(request.responseURL),\n        clone: Future.of(response),\n        text: Future.of(request.responseText),\n        json: Future.of(JSON.parse(request.responseText)),\n        xml: Future.of(request.responseXML),\n        blob: Future.of(new Blob([request.response])),\n        headers: {\n          keys: Future.of(keys),\n          entries: Future.of(all),\n          get: n => Future.of(headers[n.toLowerCase()]),\n          has: n => Future.of(n.toLowerCase() in headers)\n        }\n      }\n    }\n  })\n}\n"],"names":["const","let"],"mappings":"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"}